package dynamic

// Code generated by centrifuge. DO NOT EDIT.

import (
	"github.com/NX211/traefik-proxmox-provider/dynamic/tls"
	"github.com/NX211/traefik-proxmox-provider/dynamic/types"
)

type ProxyProtocol struct {
	Version int `json:"version,omitempty"`
}

type RouterTCPTLSConfig struct {
	Passthrough  bool           `json:"passthrough"`
	Options      string         `json:"options,omitempty"`
	CertResolver string         `json:"certResolver,omitempty"`
	Domains      []types.Domain `json:"domains,omitempty"`
}

type TCPConfiguration struct {
	Routers           map[string]*TCPRouter           `json:"routers,omitempty"`
	Services          map[string]*TCPService          `json:"services,omitempty"`
	Middlewares       map[string]*TCPMiddleware       `json:"middlewares,omitempty"`
	Models            map[string]*TCPModel            `json:"-" label:"-"`
	ServersTransports map[string]*TCPServersTransport `json:"serversTransports,omitempty" label:"-"`
}

type TCPModel struct {
	DefaultRuleSyntax string `json:"-" label:"-"`
}

type TCPRouter struct {
	EntryPoints []string            `json:"entryPoints,omitempty"`
	Middlewares []string            `json:"middlewares,omitempty"`
	Service     string              `json:"service,omitempty"`
	Rule        string              `json:"rule,omitempty"`
	RuleSyntax  string              `json:"ruleSyntax,omitempty"`
	Priority    *int                `json:"priority,omitempty"`
	TLS         *RouterTCPTLSConfig `json:"tls,omitempty" label:"allowEmpty"`
}

type TCPServer struct {
	Address string `json:"address,omitempty" label:"-"`
	Port    string `json:"-"`
	TLS     bool   `json:"tls,omitempty"`
}

type TCPServersLoadBalancer struct {
	Servers          []TCPServer    `json:"servers,omitempty" label-slice-as-struct:"server"`
	ServersTransport string         `json:"serversTransport,omitempty"`
	ProxyProtocol    *ProxyProtocol `json:"proxyProtocol,omitempty" label:"allowEmpty"`
	TerminationDelay *int           `json:"terminationDelay,omitempty"`
}

type TCPServersTransport struct {
	DialKeepAlive    string           `json:"dialKeepAlive,omitempty"`
	DialTimeout      string           `json:"dialTimeout,omitempty"`
	ProxyProtocol    *ProxyProtocol   `json:"proxyProtocol,omitempty" label:"allowEmpty"`
	TerminationDelay string           `json:"terminationDelay,omitempty"`
	TLS              *TLSClientConfig `json:"tls,omitempty" label:"allowEmpty"`
}

type TCPService struct {
	LoadBalancer *TCPServersLoadBalancer `json:"loadBalancer,omitempty"`
	Weighted     *TCPWeightedRoundRobin  `json:"weighted,omitempty" label:"-"`
}

type TCPWRRService struct {
	Name   string `json:"name,omitempty"`
	Weight *int   `json:"weight,omitempty"`
}

type TCPWeightedRoundRobin struct {
	Services []TCPWRRService `json:"services,omitempty"`
}

type TLSClientConfig struct {
	ServerName         string           `json:"serverName,omitempty"`
	InsecureSkipVerify bool             `json:"insecureSkipVerify,omitempty"`
	RootCAs            []string         `json:"rootCAs,omitempty"`
	Certificates       tls.Certificates `json:"certificates,omitempty"`
	PeerCertURI        string           `json:"peerCertURI,omitempty"`
	Spiffe             *Spiffe          `json:"spiffe,omitempty" label:"allowEmpty"`
}
